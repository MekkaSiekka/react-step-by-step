[{"C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\index.js":"1","C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\App.js":"2","C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\Home.js":"3","C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\Navbar.js":"4","C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\BlogList.js":"5","C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\useFetch.js":"6"},{"size":447,"mtime":1627102431920,"results":"7","hashOfConfig":"8"},{"size":246,"mtime":1627102431911,"results":"9","hashOfConfig":"8"},{"size":1352,"mtime":1627117493532,"results":"10","hashOfConfig":"8"},{"size":257,"mtime":1627102493770,"results":"11","hashOfConfig":"8"},{"size":468,"mtime":1627114572159,"results":"12","hashOfConfig":"8"},{"size":1344,"mtime":1627117731999,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1aot0ut",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\index.js",[],["29","30"],"C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\App.js",[],"C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\Home.js",["31","32"],"import { useState, useEffect } from 'react';\r\nimport BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\n/*\r\nneed a json server to provide data instead of hardcoding\r\nnpx json-server --watch .\\data\\db.json --port 8000\r\n\r\nMaking customer hook: want to not rewrite the thing for each component \r\nfor data fetching\r\n*/\r\nconst Home = () => {\r\n  //id is used for reacto to export data and should be unique\r\n  \r\n  /*should not hardcoding the lists, need a way to cycle through the list\r\n  However, this really repetivie and needs a template to make it reusable\r\n  So, use props to pass as arguments\r\n  1. use cross component\r\n  2. can be resued in the home.js\r\n  */\r\n\r\n  const {data , isPending, error} = useFetch('https://localhost:8000/blogs');\r\n  const title = \"WAP\"\r\n\r\n  /**\r\n   * Dangerous here because blogs are init as null, and could be rendered as null when useEffect happends \r\n   * So use conditional to show templates\r\n   */\r\n  return (\r\n    <div className=\"home\">\r\n      {isPending && <div>Loading ...</div>}\r\n      {error && <div>{error}</div> }\r\n      {data && <BlogList blogs={data} title={title} />}\r\n      {/* <BlogList blogs={blogs.filter((blog) => blog.author === 'mario')} title = 'Noob' /> */}\r\n      {/* <button onClick={()=>setName('Chris, new name')}>change Name</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\Navbar.js",[],"C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\BlogList.js",[],"C:\\Users\\chrjiang\\OneDrive - NVIDIA Corporation\\Documents\\workspace\\React-Step-By-Step\\src\\useFetch.js",["33","34"],"import { useState } from \"react\";\r\nimport { useEffect} from \"react\";\r\n\r\n\r\nconst useFetch = (url)=>{\r\n\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [name, setName] = useState('mario')\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const FetchAndUpdateData = (url) => {\r\n        //fetch('http://localhost:8000/blogs22')\r\n        fetch(url)\r\n          .then(res => {\r\n            //console.log(res)\r\n            if (!res.ok){\r\n                \r\n              throw Error('Could not fetch the data, data is null');\r\n            }\r\n            return res.json();\r\n          })\r\n          .then(data => {\r\n\r\n            console.log(data);\r\n            setData(data);\r\n            setIsPending(false);\r\n            setError(null);\r\n          })\r\n          .catch((err)=>{\r\n            setError(err.message);\r\n            setIsPending(false);\r\n          });\r\n      }\r\n\r\n      \r\n    //whenever url changes useEffect should reload\r\n    useEffect(() => {\r\n        //all function contents callback\r\n        console.log(\"useEffect running\");\r\n        console.log(data);\r\n        console.log(name);\r\n        setTimeout(() => {\r\n          FetchAndUpdateData();\r\n        }, 1000); \r\n      },\r\n        [url]\r\n      )\r\n\r\n    return {data, isPending, error}\r\n}\r\n\r\nexport default useFetch;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":10,"nodeType":"41","messageId":"42","endLine":1,"endColumn":18},{"ruleId":"39","severity":1,"message":"43","line":1,"column":20,"nodeType":"41","messageId":"42","endLine":1,"endColumn":29},{"ruleId":"39","severity":1,"message":"44","line":9,"column":18,"nodeType":"41","messageId":"42","endLine":9,"endColumn":25},{"ruleId":"45","severity":1,"message":"46","line":48,"column":9,"nodeType":"47","endLine":48,"endColumn":14,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'name'. Either include them or remove the dependency array.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [data, name, url]",{"range":"54","text":"55"},[1260,1265],"[data, name, url]"]